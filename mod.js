// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var t="function"==typeof Object.defineProperty?Object.defineProperty:null;var e=Object.defineProperty,r=Object.prototype,o=r.toString,n=r.__defineGetter__,l=r.__defineSetter__,u=r.__lookupGetter__,a=r.__lookupSetter__;var i=function(){try{return t({},"x",{}),!0}catch(t){return!1}}()?e:function(t,e,i){var c,f,y,p;if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. First argument must be an object. Value: `"+t+"`.");if("object"!=typeof i||null===i||"[object Array]"===o.call(i))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+i+"`.");if((f="value"in i)&&(u.call(t,e)||a.call(t,e)?(c=t.__proto__,t.__proto__=r,delete t[e],t[e]=i.value,t.__proto__=c):t[e]=i.value),y="get"in i,p="set"in i,f&&(y||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return y&&n&&n.call(t,e,i.get),p&&l&&l.call(t,e,i.set),t};function c(t,e,r){i(t,e,{configurable:!1,enumerable:!1,writable:!1,value:r})}function f(t){return"number"==typeof t}var y="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");function p(){return y&&"symbol"==typeof Symbol.toStringTag}var b=Object.prototype.toString;var _=Object.prototype.hasOwnProperty;function m(t,e){return null!=t&&_.call(t,e)}var v="function"==typeof Symbol?Symbol.toStringTag:"";var s=p()?function(t){var e,r,o;if(null==t)return b.call(t);r=t[v],e=m(t,v);try{t[v]=void 0}catch(e){return b.call(t)}return o=b.call(t),e?t[v]=r:delete t[v],o}:function(t){return b.call(t)},d=Number,g=d.prototype.toString;var S=p();function j(t){return"object"==typeof t&&(t instanceof d||(S?function(t){try{return g.call(t),!0}catch(t){return!1}}(t):"[object Number]"===s(t)))}function h(t){return f(t)||j(t)}function w(t){return t!=t}c(h,"isPrimitive",f),c(h,"isObject",j);var O="function"==typeof Symbol&&"symbol"==typeof Symbol("foo")&&m(Symbol,"iterator")&&"symbol"==typeof Symbol.iterator?Symbol.iterator:null,T=Number.POSITIVE_INFINITY;function P(){var t,e=arguments,r=e[0],o="https://stdlib.io/e/"+r+"?";for(t=1;t<e.length;t++)o+="&arg[]="+encodeURIComponent(e[t]);return o}function E(t,e){var r,o,n,l;if(!f(t)||w(t))throw new TypeError(P("0D04M",t));if(arguments.length>1){if(!f(e)||w(e))throw new TypeError(P("0D04N",e));r=e}else r=T;return n=t-1,c(o={},"next",u),c(o,"return",a),O&&c(o,O,i),o;function u(){return l?{done:!0}:(n+=1)>r?(l=!0,{done:!0}):{value:n,done:!1}}function a(t){return l=!0,arguments.length?{value:t,done:!0}:{done:!0}}function i(){return E(t,r)}}export{E as default};
//# sourceMappingURL=mod.js.map
